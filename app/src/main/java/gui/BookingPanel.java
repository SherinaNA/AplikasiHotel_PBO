/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import entities.Kamar;
import entities.Reservation;
import entities.Tamu;
import helpers.TabelBooking;
import java.util.List;
import javax.swing.JOptionPane;
import models.KamarDAO;
import models.KamarSQLite;
import models.ReservationDAO;
import models.ReservationSQLite;
import models.TamuDAO;
import models.TamuSQLite;

/**
 *
 * @author lenovo
 */
public class BookingPanel extends javax.swing.JPanel {
    
    ReservationDAO reservationDAO;
    TamuDAO tamuDAO;
    KamarDAO kamarDAO;
    MainPage mainPage; // Referensi ke MainPage
    List<Reservation> dataBooking;
    List<String> noKtpList;
    List<String> noKamarList;
    boolean editMode = false;
    
    /**
     * Creates new form BookingPanel
     */
    
    public BookingPanel(MainPage mainPage) {
        this.mainPage = mainPage; // Simpan referensi MainPage
        initComponents();
        reservationDAO = new ReservationSQLite();
        tamuDAO = new TamuSQLite();
        kamarDAO = new KamarSQLite();
        refreshData();
    }
    
    private void clearInput() {
        cmbNoKtp.setSelectedIndex(-1);
        cmbKamar.setSelectedIndex(-1);
        txtNama.setText("");
    }
    
    public void refreshData() {
        dataBooking = reservationDAO.getBookRoomData();
        tblBooking.setModel(new TabelBooking(dataBooking));
        tampil_noKtp();
        tampil_noKamar();
        clearInput();
    }
    
    private void tampil_noKtp() {
        noKtpList = tamuDAO.getAllNoKtp();
        cmbNoKtp.removeAllItems();
        for (String noKtp : noKtpList) {
            cmbNoKtp.addItem(noKtp);
        }
    }
    
    private void tampil_noKamar() {
        noKamarList = kamarDAO.getNoKamarAvailable();
        cmbKamar.removeAllItems();
        for (String noKamar : noKamarList) {
            cmbKamar.addItem(noKamar);
        }
    }
    
    private void onNoKtpSelected() {
        String selectedNoKtp = (String) cmbNoKtp.getSelectedItem();
        if (selectedNoKtp != null) {
            Tamu tamu = tamuDAO.getNoKtp(selectedNoKtp);
            txtNama.setText(tamu.getNama());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBooking = new javax.swing.JLabel();
        lblNoKtp = new javax.swing.JLabel();
        lblNama = new javax.swing.JLabel();
        lblNoKamar = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        cmbKamar = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        lblBookKamar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooking = new javax.swing.JTable();
        cmbNoKtp = new javax.swing.JComboBox<>();

        lblBooking.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblBooking.setText("Pesanan Kamar (Booking)");

        lblNoKtp.setText("No KTP");

        lblNama.setText("Nama");

        lblNoKamar.setText("Nomor Kamar");

        cmbKamar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kamar 101", "Kamar 102", "Kamar 201", "Kamar 202", "Kamar 301" }));
        cmbKamar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKamarActionPerformed(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(204, 204, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 153, 153));
        btnHapus.setText("Hapus");
        btnHapus.setEnabled(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        lblBookKamar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblBookKamar.setText("Data Booking Kamar");

        tblBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBooking);

        cmbNoKtp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNoKtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNoKtpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBookKamar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBooking)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 13, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNoKtp, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNama, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNoKamar))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbNoKtp, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBooking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbNoKtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNoKtp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNama))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNoKamar))
                .addGap(18, 18, 18)
                .addComponent(lblBookKamar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String noKtp = (String) cmbNoKtp.getSelectedItem();
        String noKamar = (String) cmbKamar.getSelectedItem();
        
        if (noKtp == null || noKamar == null) {
            JOptionPane.showMessageDialog(this, "No KTP dan No Kamar harus dipilih!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            Tamu tamu = tamuDAO.getNoKtp(noKtp);
            Kamar kamar = kamarDAO.get(noKamar);
            reservationDAO.bookRoom(tamu, kamar);
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        refreshData();
        if (mainPage != null) {
            mainPage.refreshData(); // Refresh data di MainPage
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBooking.getSelectedRow();
        if (selectedRow != -1) {
            // Ambil ID reservasi dari tabel
            int reservationId = (int) tblBooking.getValueAt(selectedRow, 0);

            // Hapus reservasi dari database
            reservationDAO.delete(reservationId);

            // Refresh tabel booking
            refreshData();

            // Reset form fields
            clearInput();
            if (mainPage != null) {
                mainPage.refreshData(); // Panggil method untuk refresh data di MainPage
            }

            // Disable btnHapus
            btnHapus.setEnabled(false);

            JOptionPane.showMessageDialog(this, "Reservation deleted successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a reservation to delete.");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void cmbNoKtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNoKtpActionPerformed
        // TODO add your handling code here:
        String selectedNoKtp = (String) cmbNoKtp.getSelectedItem();
        if (selectedNoKtp != null) {
            Tamu tamu = tamuDAO.getNoKtp(selectedNoKtp);
            txtNama.setText(tamu.getNama());
        }
    }//GEN-LAST:event_cmbNoKtpActionPerformed

    private void cmbKamarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKamarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKamarActionPerformed

    private void tblBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookingMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            editMode = true;
            btnHapus.setEnabled(true);

            int selectedRow = tblBooking.getSelectedRow();
            if (selectedRow != -1) {
                // Ambil data dari tabel, abaikan kolom pertama (ID)
                String noKtp = (String) tblBooking.getValueAt(selectedRow, 1);
                String nama = (String) tblBooking.getValueAt(selectedRow, 2);
                String noKamar = (String) tblBooking.getValueAt(selectedRow, 3);

                // Set nilai pada form
                cmbNoKtp.setSelectedItem(noKtp);
                txtNama.setText(nama);
                cmbKamar.setSelectedItem(noKamar);
            }
        }
    }//GEN-LAST:event_tblBookingMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> cmbKamar;
    private javax.swing.JComboBox<String> cmbNoKtp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookKamar;
    private javax.swing.JLabel lblBooking;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblNoKamar;
    private javax.swing.JLabel lblNoKtp;
    private javax.swing.JTable tblBooking;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
